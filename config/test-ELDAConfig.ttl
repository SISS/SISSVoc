## Common prefixes - don't change these.
@prefix api:     <http://purl.org/linked-data/api/vocab#> .
@prefix dc:      <http://purl.org/dc/elements/1.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix elda:    <http://www.epimorphics.com/vocabularies/lda#> .
@prefix foaf:    <http://xmlns.com/foaf/0.1/> .
@prefix owl:     <hhttp://def.seegrid.csiro.au/isotc211//owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos:    <http://www.w3.org/2004/02/skos/core#> .
@prefix svoc:    <http://www.seegrid.csiro.au/siss/voc/> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .

## instance specific prefixes - extra namespaces that appear in this vocabulary - adjust to taste
@prefix basic:   <http://def.seegrid.csiro.au/isotc211/iso19103/2005/basic+types/> .
@prefix geo:     <http://def.seegrid.csiro.au/ogc/geosparql/> .
@prefix gm:      <http://def.seegrid.csiro.au/isotc211/iso19107/2003/geometry/> .
@prefix gml31:   <http://def.seegrid.csiro.au/ogc/dataType/OGC-GML/3.1/> .
@prefix gml32:   <http://def.seegrid.csiro.au/ogc/dataType/OGC-GML/3.2/> .
@prefix gtrs:    <http://resource.geosciml.org/schema/cgi/trs/3.0/> .
@prefix gts:     <http://resource.geosciml.org/schema/cgi/gts/3.0/> .
@prefix isc:     <http://resource.geosciml.org/classifier/ics/ischart/> .
@prefix ogcsf:   <http://def.seegrid.csiro.au/ogc/dataType/OGC-SF/1.0/> .
@prefix sam:     <http://def.seegrid.csiro.au/isotc211/iso19156/2011/sampling/> .
@prefix tm:      <http://def.seegrid.csiro.au/isotc211/iso19108/2006/temporal+objects/> .
@prefix trs:     <http://def.seegrid.csiro.au/isotc211/iso19108/2006/temporal+reference+system/> .

## Reference - https://www.seegrid.csiro.au/wiki/Siss/VocabularyService3

svoc:test a api:API 
# generic SISSvoc stuff
	; api:maxPageSize "50"
	; api:defaultPageSize "10" 
	; api:defaultFormatter [ 
			a api:XsltFormatter
			; api:name 'html'
			; api:stylesheet 'xsltsheets/XmlRdfRenderer.xsl' 
			; api:mimeType 'text/html' 
	] 
	; api:endpoint
		svoc:conceptSchemeEndpoint , 		
		svoc:conceptCollectionEndpoint , 	
		svoc:conceptListEndpoint , 
		svoc:conceptByLabelEndpoint , 
		svoc:conceptByLabelLooseEndpoint ,
		svoc:conceptByNotationEndpoint , 
		svoc:URIEndpoint 
	; api:defaultViewer api:describeViewer 
# deployment specific stuff - adjust to taste
	; rdfs:label "TEST - International Stratigraphic Chart API"@en 
	; foaf:primaryTopic <http://stratigraphy.org/column.php?id=Chart/Time%20Scale> 
	; api:sparqlEndpoint <http://services-test.auscope.org/openrdf-sesame/repositories/ischart> 
	.

#VIEWERS

svoc:viewerNone a api:Viewer 
    ; api:name "none"
    .

svoc:shortConceptViewer a api:Viewer 
    ; api:name "conceptShort" 
    ; api:property skos:prefLabel
    .


#ENDPOINTS

# can we factor out the /test element from the paths here, to make it a generic SISSvoc configuration?

## 1. List of concept schemes - basic-view 
svoc:conceptSchemeEndpoint a api:ListEndpoint 
		; rdfs:comment "All concept-schemes" 
		; api:uriTemplate "/test/conceptscheme" 
		; api:exampleRequestPath  "/test/conceptscheme"
#		; api:selector [	api:filter "type=ConceptScheme" ] 
		; api:selector [	api:where " ?item a skos:ConceptScheme" ] 
		; api:defaultViewer  api:labelledDescribeViewer
		.
		
## 2. List of concept collections - basic-view 	 
svoc:conceptCollectionEndpoint a api:ListEndpoint 
		; rdfs:comment "All concept collections" 
		; api:uriTemplate "/test/collection" 
		; api:exampleRequestPath  "/test/collection"
		; api:selector [ api:where " ?item a ?type . FILTER ( ?type = skos:Collection || ?type = skos:OrderedCollection ) " ] 
		; api:defaultViewer  api:labelledDescribeViewer
		.
		
## 3. List of concepts - basic-view 
svoc:conceptListEndpoint a api:ListEndpoint 
		; rdfs:comment "All concepts" 
		; api:uriTemplate "/test/concept" 
		; api:exampleRequestPath  "/test/concept"
		; api:selector [ 
				api:where " ?item a skos:Concept " 
		] 
		; api:defaultViewer svoc:shortConceptViewer 
		.
		
## 4. List of concepts where a label matches the text, in English 
svoc:conceptByLabelEndpoint a api:ListEndpoint 
		; rdfs:comment "Exact match to value of any label property, in English"
		; api:uriTemplate "/test/concept?anylabel={text}" 
		; api:exampleRequestPath  "/test/concept?anylabel=Cambrian" 
		; api:selector [
				api:where " ?item ?label ?l . FILTER ( ?label = rdfs:label || ?label = skos:prefLabel || ?label = skos:altLabel ) FILTER ( ?l = ?text@en ) "
		] 		
		; api:defaultViewer svoc:shortConceptViewer 
		.
		
## 4a. List of concepts where a label contains the text, any language, case-insensitive 
svoc:conceptByLabelLooseEndpoint a api:ListEndpoint 
		; rdfs:comment "Value of any label property contains this text, case-insensitive"
		; api:uriTemplate "/test/concept?labelcontains={text}" 
		; api:exampleRequestPath  "/test/concept?labelcontains=Cambrian" 
		; api:selector [
				api:where " ?item ?label ?l . FILTER ( ?label = rdfs:label || ?label = skos:prefLabel || ?label = skos:altLabel ) FILTER regex( str(?l) , ?text , "i" ) "
		] 		
		; api:defaultViewer svoc:shortConceptViewer 
		.
## 5. List of concepts where the skos:notation matches the quoted text  	 
svoc:conceptByNotationEndpoint a api:ListEndpoint 
		; rdfs:comment "Exact match to value of notation property"
		; api:uriTemplate "/test/concept?notation={nn}" 
		; api:exampleRequestPath  "/test/concept?notation=a1.1.3.6"
		; api:selector [ 
				api:where " ?item skos:notation ?n . FILTER regex( str(?n),?nn ) "
#			; api:orderBy "STR(?item)"
		]
		; api:defaultViewer svoc:shortConceptViewer 
		.
		
## 6. This is the basic "tell me what you know about the resource identified by this URI" request. 
svoc:URIEndpoint a api:ItemEndpoint
		; rdfs:comment "Describe this resource" 
		; api:uriTemplate  "/test/resource?uri={uri}" 
		; api:itemTemplate  "{uri}"
		; api:exampleRequestPath  "/test/resource?uri=http://resource.geosciml.org/classifier/ics/ischart/Cambrian"
		; api:defaultViewer  api:labelledDescribeViewer
		; api:viewer  api:describeViewer,api:basicViewer,api:labelledDescribeViewer
		.


#
# VOCABULARY
#
# The vocabulary declarations say which properties can be used in queries
# and by what short name those properties are known. If property P with short
# name Q has range type T, then a query parameters Q=V is translated to
# a WHERE clause fragment ?item P V' where V' is a literal which is V
# with type T. This is especially important for numbers and booleans.
# 

## RDF
rdf:type
    api:label "type" ; 
    rdfs:range rdfs:Class .
  
## RDFS
rdfs:label 
    api:label "label" ; 
    api:structured "true"^^xsd:boolean;
    a           rdf:Property .

rdfs:comment 
    api:label "comment" ; 
    api:structured "true"^^xsd:boolean;
    a           rdf:Property .

## SKOS
skos:Concept
						api:label "Concept" ;
             a         rdfs:Class .
             
skos:ConceptScheme 
             api:label "ConceptScheme" ;
             a         rdfs:Class .

skos:prefLabel
         	api:label "prefLabel" ;
         	api:structured "true"^^xsd:boolean;
            a           rdf:Property .
            
skos:altLabel
            api:label "altLabel" ; 
            api:multiValued true ;
            api:structured "true"^^xsd:boolean;
            a         rdf:Property  .
            
skos:note
						api:label "note" ;
            api:structured "true"^^xsd:boolean;
            a         rdf:Property  .
            
skos:notation
						a owl:DatatypeProperty; 
						api:label "notation"  .

skos:scopeNote
						api:label "scopeNote" ;
            api:structured "true"^^xsd:boolean;
            a   rdf:Property  .
            
skos:topConceptOf
						api:label "topConceptOf" ;
            rdfs:range      skos:ConceptScheme .
            
skos:hasTopConcept
						api:label "hasTopConcept" ; 
						api:multiValued true ;
            rdfs:range      skos:Concept .
            
skos:broader
							api:label "broader" ; 
							api:multiValued true ;
             rdfs:range      skos:Concept .

skos:narrower
							api:label "narrower" ; 
							api:multiValued true ;
             rdfs:range      skos:Concept .
            
skos:broaderTransitive
							api:label "broaderTransitive" ; 
							api:multiValued true ;
             rdfs:range      skos:Concept .

skos:narrowerTransitive
							api:label "narrowerTransitive" ; 
							api:multiValued true ;
             rdfs:range      skos:Concept .
            
skos:definition	
							api:label "definition" ; 
							api:multiValued true .
	
skos:inScheme
						api:label "inScheme" ; 
						rdfs:domain	skos:Concept ;
            rdfs:range      skos:ConceptScheme .

skos:member
						api:label "member" ; 
						api:multiValued true ;
						rdfs:domain	skos:Collection ;
            rdfs:range      skos:Concept .

skos:memberList
						api:label "memberList" ; 
						rdfs:domain	skos:OrderedCollection ;
            rdfs:range      skos:Concept .


