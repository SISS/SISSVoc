##############################################################
#
# This is the template LDA configuration for a SISSvoc service
# Reference - <https://www.seegrid.csiro.au/wiki/Siss/SISSvoc30Specification>
#
# Copyright (c) CSIRO 2012
# Re-use permitted according to Creative Commons Attribution 3.0 Australia (CC BY 3.0)
# see <http://creativecommons.org/licenses/by/3.0/au/>
#
# Contact: Simon J D Cox
#          CSIRO Earth Science and Resource Engineering
#          PO Box 1130
#          Bentley
#          WA 6102
#          Australia
#          simon.cox@csiro.au
#
# The configuration must be customized for each vocabulary
# Sections that must be customized are bracketted by rows of hashes similar to the line below which ends this comment block
#
##############################################################

## Common prefixes - don't change these.
@prefix api:     <http://purl.org/linked-data/api/vocab#> .
@prefix dc:      <http://purl.org/dc/elements/1.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix elda:    <http://www.epimorphics.com/vocabularies/lda#> .
@prefix foaf:    <http://xmlns.com/foaf/0.1/> .
@prefix owl:     <http://def.seegrid.csiro.au/isotc211//owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos:    <http://www.w3.org/2004/02/skos/core#> .
@prefix svoc:    <http://www.seegrid.csiro.au/siss/voc/> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .

##############################################################
##
## TODO: deployer to make changes here
## other namespaces that appear in this vocabulary

@prefix crs:   	<http://def.seegrid.csiro.au/isotc211/iso19111/2008/crs/> .
@prefix def:    <http://www.opengis.net/def/> .

## end of TODO:
##############################################################


##############################################################
##
## TODO: deployer to make changes here
## change "test" to give this API a name to distinguish it from any other API hosted by the same LDA service

svoc:ogc-def a api:API

## it would be great if this could be made to help somehow, but ELDA does not currently appear to implement it
#	; api:base "http://def.seegrid.csiro.au/sissvoc/test"

## end of TODO:
##############################################################

# generic SISSvoc stuff
	; api:maxPageSize "50"
	; api:defaultPageSize "10"
 	; api:defaultFormatter [
			a api:XsltFormatter
			; api:name "html"
			; api:mimeType "text/html"
			; api:stylesheet "resources/siss-default/transform/ashtml-sissvoc.xsl"
# the following property enables the stylesheet to work better, including linking the item properties to their definitions
			; elda:metadataOptions "bindings,versions,execution,formats"
	]

##############################################################

	; api:endpoint
		svoc:LandingPage,
		svoc:URIEndpoint ,
		svoc:conceptSchemeEndpoint ,
		svoc:conceptCollectionEndpoint ,
		svoc:conceptListEndpoint ,
		svoc:conceptLabelEndpoint ,
		svoc:conceptLabelContainsEndpoint ,
		svoc:broaderThanURIEndpoint ,
		svoc:narrowerThanURIEndpoint ,
		svoc:broaderTransitiveThanURIEndpoint ,
		svoc:narrowerTransitiveThanURIEndpoint ,
		svoc:broaderLabelEndpoint ,
		svoc:narrowerLabelEndpoint ,
		svoc:broaderTransitiveLabelEndpoint ,
		svoc:narrowerTransitiveLabelEndpoint
	; api:defaultViewer api:describeViewer
	; elda:enableETags true

##############################################################
##
## TODO: deployer to make changes here
## replace %DEPLOYPATH% to be the actual deployed path on the webserver - style sheets are not currently functional for relative paths

	; api:variable [api:name "webapp"; api:value "%DEPLOYPATH%"]
	; api:variable
		[api:name "SISSDefaultResourceDirBase"; api:value "{webapp}/resources/siss-default/"]
		, [api:name "myResourceDirBase"; api:value "{webapp}/resources/ogc/"]
		, [api:name "_resourceRoot"; api:value "{webapp}/"]
		, [api:name "serviceTitle"; api:value "OGC Definitions Service"]
		, [api:name "serviceAuthor"; api:value "Simon Cox"]
		, [api:name "serviceAuthorEmail"; api:value "Simon.Cox@csiro.au"]
		, [api:name "serviceHomePage"; api:value "http://www.opengeospatial.org/"]

## set title of service

	; rdfs:label "OGC Definitions - vocabulary service API"@en

# document the provenance of this vocabulary with links to the source

	; rdfs:seeAlso <http://www.opengeospatial.org>

# set the SPARQL endpoint

	; api:sparqlEndpoint <http://def.seegrid.csiro.au/sparql/ogc-def>
	.

## end of TODO:
##############################################################

##############################################################
##
## TODO: deployer to make changes here
## SPARQL 1.1 endpoints ONLY!
## remove this if the endpoint does not support SPARQL 1.1

<http://def.seegrid.csiro.au/sparql/ogc-def> elda:supportsNestedSelect true .

## end of TODO:
##############################################################

#VIEWERS

svoc:viewerNone a api:Viewer
    ; api:name "none"
    .

svoc:basicConceptSchemeViewer a api:Viewer
    ; api:name "conceptScheme"
    ; api:property rdfs:label, skos:hasTopConcept
    .

svoc:basicCollectionViewer a api:Viewer
    ; api:name "collection"
    ; api:property rdfs:label, skos:member
    .

svoc:basicConceptViewer a api:Viewer
    ; api:name "concept"
    ; api:property skos:prefLabel
    .


#ENDPOINTS

## 000.000. This is the metadata identifier for the vocabulary content.
svoc:LandingPage a api:ItemEndpoint
		; rdfs:comment "Landing Page for this resource"
		; api:uriTemplate  "/ogc-def"
		; api:exampleRequestPath  "/ogc-def"
		; api:itemTemplate  "http://www.opengis.net/def/ogc/"
		; api:defaultViewer  api:labelledDescribeViewer
		; api:viewer  api:basicViewer,api:labelledDescribeViewer
		.



## 0. This is the basic "tell me what you know about the resource identified by this URI" request.
svoc:URIEndpoint a api:ItemEndpoint
		; rdfs:comment "Describe this resource"
##############################################################
##
## TODO: deployer to make changes here
## change "test" to vocab name
## set value of uri= to a URI from the vocabulary

		; api:uriTemplate  "/ogc-def/resource?uri={URI}"
		; api:exampleRequestPath  "/ogc-def/resource?uri=http://www.opengis.net/def/ogc/inapplicable"

## end of TODO:
##############################################################
		; api:itemTemplate  "{URI}"
		; api:defaultViewer  api:labelledDescribeViewer
		; api:viewer  api:basicViewer,api:describeViewer,api:labelledDescribeViewer
#		; api:viewer  svoc:labelledDescribeConceptViewer
		.

## 1. List of concept schemes - basic-view
svoc:conceptSchemeEndpoint a api:ListEndpoint
		; rdfs:comment "List all concept-schemes"
##############################################################
##
## TODO: deployer to make changes here
## change "test" to vocab name

		; api:uriTemplate  "/ogc-def/conceptscheme"
		; api:exampleRequestPath  "/ogc-def/conceptscheme"

## end of TODO:
##############################################################
		; api:selector [	api:where " ?item a skos:ConceptScheme . " ]
		; api:defaultViewer  svoc:basicConceptSchemeViewer
		; api:viewer  api:basicViewer,svoc:basicConceptSchemeViewer
		.

## 2. List of concept collections - basic-view
svoc:conceptCollectionEndpoint a api:ListEndpoint
		; rdfs:comment "List all concept collections"
##############################################################
##
## TODO: deployer to make changes here
## change "test" to vocab name

		; api:uriTemplate  "/ogc-def/collection"
		; api:exampleRequestPath  "/ogc-def/collection"

## end of TODO:
##############################################################
		; api:selector [
				api:where
					"{ ?item a skos:OrderedCollection } UNION { ?item a skos:Collection }"
			]
		; api:defaultViewer  svoc:basicCollectionViewer
		; api:viewer  api:basicViewer,svoc:basicCollectionViewer
		.

## 3. List of concepts - basic-view
svoc:conceptListEndpoint a api:ListEndpoint
		; rdfs:comment "List all concepts"
##############################################################
##
## TODO: deployer to make changes here
## change "test" to vocab name

		; api:uriTemplate  "/ogc-def/concept"
		; api:exampleRequestPath  "/ogc-def/concept"

## end of TODO:
##############################################################
		; api:selector [
				api:where " ?item a skos:Concept . "
		]
		; api:defaultViewer svoc:basicConceptViewer
		; api:viewer  api:basicViewer,svoc:basicConceptViewer
		.

## 4. List of concepts where a label matches the text
svoc:conceptLabelEndpoint a api:ListEndpoint
		; rdfs:comment "List concepts where a skos label property has exact match to text"
##############################################################
##
## TODO: deployer to make changes here
## change "test" to vocab name
## change value of anyLabel= to a label for a concept in this vocabulary

		; api:uriTemplate  "/ogc-def/concept?anylabel={text}"
		; api:exampleRequestPath  "/ogc-def/concept?anylabel=West"

## end of TODO:
##############################################################
		; api:selector [
				api:where
					""" { ?item skos:prefLabel ?l }
							UNION
							{ ?item skos:altLabel ?l }
							FILTER ( str(?l)=?text ) """
		]
		; api:defaultViewer svoc:basicConceptViewer
		; api:viewer  api:basicViewer,svoc:basicConceptViewer
		.

## 5. List of concepts where a label contains the text, any language, case-insensitive
svoc:conceptLabelContainsEndpoint a api:ListEndpoint
		; rdfs:comment "List concepts where a skos label property contains this text, case-insensitive"
##############################################################
##
## TODO: deployer to make changes here
## change "test" to vocab name
## change value of labelcontains= to a word in a label for a concept in this vocabulary

		; api:uriTemplate  "/ogc-def/concept?labelcontains={text}"
		; api:exampleRequestPath  "/ogc-def/concept?labelcontains=vertical"

## end of TODO:
##############################################################
		; api:selector [
				api:where
					""" { ?item skos:prefLabel ?l }
							UNION
							{ ?item skos:altLabel ?l }
							FILTER regex( str(?l) , ?text , 'i' ) """
		]
		; api:defaultViewer svoc:basicConceptViewer
		; api:viewer  api:basicViewer,svoc:basicConceptViewer
		.

## 6. List of concepts broader than the one identified by this URI
svoc:broaderThanURIEndpoint a api:ListEndpoint
		; rdfs:comment "List concepts broader than the one identified by this URI"
##############################################################
##
## TODO: deployer to make changes here
## change "test" to vocab name
## change value of uri= to a uri for a concept in this vocabulary

		; api:uriTemplate  "/ogc-def/concept/broader?uri={baseConcept}"
		; api:exampleRequestPath  "/ogc-def/concept/broader?uri=http://www.opengis.net/def/ogc-eo/CoverageType/MULTIPASS"

## end of TODO:
##############################################################
		; api:variable [ api:name "baseConcept"; api:type rdfs:Resource ]
		; api:selector [
				api:where " ?baseConcept skos:broader ?item . "
		]
		; api:defaultViewer svoc:basicConceptViewer
		; api:viewer  api:basicViewer,svoc:basicConceptViewer
		.

## 7. List of concepts narrower than the one identified by this URI
svoc:narrowerThanURIEndpoint a api:ListEndpoint
		; rdfs:comment "List concepts narrower than the one identified by this URI"
##############################################################
##
## TODO: deployer to make changes here
## change "test" to vocab name
## change value of uri= to a uri for a concept in this vocabulary

		; api:uriTemplate  "/ogc-def/concept/narrower?uri={baseConcept}"
		; api:exampleRequestPath  "/ogc-def/concept/narrower?uri=http://www.opengis.net/def/ogc-eo/CoverageType"

## end of TODO:
##############################################################
		; api:variable  [ api:name "baseConcept"; api:type rdfs:Resource ]
		; api:selector [
				api:where " ?baseConcept skos:narrower ?item . "
		]
		; api:defaultViewer svoc:basicConceptViewer
		; api:viewer  api:basicViewer,svoc:basicConceptViewer
		.

## 8. List of concepts broaderTransitive than the one identified by this URI
svoc:broaderTransitiveThanURIEndpoint a api:ListEndpoint
		; rdfs:comment "List concepts broaderTransitive than the one identified by this URI"
##############################################################
##
## TODO: deployer to make changes here
## change "test" to vocab name
## change value of uri= to a uri for a concept in this vocabulary

		; api:uriTemplate  "/ogc-def/concept/broaderTransitive?uri={baseConcept}"
		; api:exampleRequestPath  "/ogc-def/concept/broaderTransitive?uri=http://www.opengis.net/def/ogc-eo/CoverageType/MULTIPASS"

## end of TODO:
##############################################################
		; api:variable  [ api:name "baseConcept"; api:type rdfs:Resource ]
		; api:selector [
				api:where " ?baseConcept skos:broaderTransitive ?item . "
		]
		; api:defaultViewer svoc:basicConceptViewer
		; api:viewer  api:basicViewer,svoc:basicConceptViewer
		.

## 9. List of concepts narrowerTransitive than the one identified by this URI
svoc:narrowerTransitiveThanURIEndpoint a api:ListEndpoint
		; rdfs:comment "List concepts narrowerTransitive than the one identified by this URI"
##############################################################
##
## TODO: deployer to make changes here
## change "test" to vocab name
## change value of uri= to a uri for a concept in this vocabulary

		; api:uriTemplate  "/ogc-def/concept/narrowerTransitive?uri={baseConcept}"
		; api:exampleRequestPath  "/ogc-def/concept/narrowerTransitive?uri=http://www.opengis.net/def/ogc-eo/CoverageType"

## end of TODO:
##############################################################
		; api:variable  [ api:name "baseConcept"; api:type rdfs:Resource ]
		; api:selector [
				api:where " ?baseConcept skos:narrowerTransitive ?item . "
		]
		; api:defaultViewer svoc:basicConceptViewer
		; api:viewer  api:basicViewer,svoc:basicConceptViewer
		.

## 10. List of concepts broader than the one where a label matches the text
svoc:broaderLabelEndpoint a api:ListEndpoint
		; rdfs:comment "List concepts broader than any concepts with this exact label"
##############################################################
##
## TODO: deployer to make changes here
## change "test" to vocab name
## change value of anyLabel= to a label for a concept in this vocabulary

		; api:uriTemplate  "/ogc-def/concept/broader?anylabel={text}"
		; api:exampleRequestPath  "/ogc-def/concept/broader?anylabel=Multi-Pass"

## end of TODO:
##############################################################
		; api:selector [
				api:where
					""" ?i0 skos:broader ?item .
							{ ?i0 skos:prefLabel ?l }
							UNION
							{ ?i0 skos:altLabel ?l }
							FILTER ( str(?l)=?text ) """
		]
		; api:defaultViewer svoc:basicConceptViewer
		; api:viewer  api:basicViewer,svoc:basicConceptViewer
		.

## 11. List of concepts narrower than the one where a label matches the text
svoc:narrowerLabelEndpoint a api:ListEndpoint
		; rdfs:comment "List concepts narrower than any concepts with this exact label"
##############################################################
##
## TODO: deployer to make changes here
## change "test" to vocab name
## change value of anyLabel= to a label for a concept in this vocabulary

		; api:uriTemplate  "/ogc-def/concept/narrower?anylabel={text}"
		; api:exampleRequestPath  "/ogc-def/concept/narrower?anylabel=Coverage%20Type"

## end of TODO:
##############################################################
		; api:selector [
				api:where
					""" ?i0 skos:narrower ?item .
							{ ?i0 skos:prefLabel ?l }
							UNION
							{ ?i0 skos:altLabel ?l }
							FILTER ( str(?l)=?text ) """
		]
		; api:defaultViewer svoc:basicConceptViewer
		; api:viewer  api:basicViewer,svoc:basicConceptViewer
		.

## 12. List of concepts broaderTransitive than the one where a label matches the text
svoc:broaderTransitiveLabelEndpoint a api:ListEndpoint
		; rdfs:comment "List concepts broaderTransitive than any concepts with this exact label"
##############################################################
##
## TODO: deployer to make changes here
## change "test" to vocab name
## change value of anyLabel= to a label for a concept in this vocabulary

		; api:uriTemplate  "/ogc-def/concept/broaderTransitive?anylabel={text}"
		; api:exampleRequestPath  "/ogc-def/concept/broaderTransitive?anylabel=Multi-Pass"

## end of TODO:
##############################################################
		; api:selector [
				api:where
					""" ?i0 skos:broaderTransitive ?item .
							{ ?i0 skos:prefLabel ?l }
							UNION
							{ ?i0 skos:altLabel ?l }
							FILTER ( str(?l)=?text ) """
		]
		; api:defaultViewer svoc:basicConceptViewer
		; api:viewer  api:basicViewer,svoc:basicConceptViewer
		.

## 13. List of concepts narrowerTransitive than the one where a label matches the text
svoc:narrowerTransitiveLabelEndpoint a api:ListEndpoint
		; rdfs:comment "List concepts narrowerTransitive than any concepts with this exact label"
##############################################################
##
## TODO: deployer to make changes here
## change "test" to vocab name
## change value of anyLabel= to a label for a concept in this vocabulary

		; api:uriTemplate  "/ogc-def/concept/narrowerTransitive?anylabel={text}"
		; api:exampleRequestPath  "/ogc-def/concept/narrowerTransitive?anylabel=Coverage%20Type"

## end of TODO:
##############################################################
		; api:selector [
				api:where
					""" ?i0 skos:narrowerTransitive ?item .
							{ ?i0 skos:prefLabel ?l }
							UNION
							{ ?i0 skos:altLabel ?l }
							FILTER ( str(?l)=?text ) """
		]
		; api:defaultViewer svoc:basicConceptViewer
		; api:viewer  api:basicViewer,svoc:basicConceptViewer
		.

##############################################################
##
## TODO: deployer to make changes here
## if the vocabulary contains "skos:notation" values and these are available for queries,
## change "gts:EraCode" to the type used for notation values in this vocabulary

### PROBLEM WITH gts:EraCode - fix later - maybe ask about how to set notation datatypes on SKOS list?

# skos:notation	rdfs:range	gts:EraCode .
# gts:EraCode	a	rdfs:DataType .

## end of TODO:
##############################################################


#
# VOCABULARY
#
# The vocabulary declarations say which properties can be used in queries
# and by what short name those properties are known. If property P with short
# name Q has range type T, then a query parameters Q=V is translated to
# a WHERE clause fragment ?item P V' where V' is a literal which is V
# with type T. This is especially important for numbers and booleans.
#

## RDF
rdf:type
    api:label "type" ;
    rdfs:range rdfs:Class .

## RDFS
rdfs:label
    api:label "label" ;
    api:structured "true"^^xsd:boolean;
    a           rdf:Property .

rdfs:comment
    api:label "comment" ;
    api:structured "true"^^xsd:boolean;
    a           rdf:Property .

## SKOS
skos:Concept
		api:label "Concept" ;
		a         rdfs:Class .

skos:ConceptScheme
		api:label "ConceptScheme" ;
		a         rdfs:Class .

skos:topConceptOf
		api:label "topConceptOf" ;
		rdfs:range      skos:ConceptScheme .

skos:hasTopConcept
		api:label "hasTopConcept" ;
		api:multiValued true ;
		rdfs:range      skos:Concept .

skos:inScheme
		api:label "inScheme" ;
		rdfs:domain	skos:Concept ;
		rdfs:range      skos:ConceptScheme .

skos:member
		api:label "member" ;
		api:multiValued true ;
		rdfs:domain	skos:Collection ;
		rdfs:range      skos:Concept .

skos:prefLabel
		api:label "prefLabel" ;
		api:structured "true"^^xsd:boolean;
		a           rdf:Property .

skos:altLabel
		api:label "altLabel" ;
		api:multiValued true ;
		api:structured "true"^^xsd:boolean;
		a         rdf:Property  .

skos:notation
		a owl:DatatypeProperty;
		api:label "notation"  .

skos:definition
		a owl:AnnotationProperty; 
		api:label "definition" .
            
skos:broaderTransitive
		api:label "broaderTransitive" ; 
		api:multiValued true ;
		rdfs:domain     skos:Concept ;
		rdfs:range      skos:Concept .
            
skos:broader
		api:label "broader" ; 
		api:multiValued true ;
		rdfs:domain     skos:Concept ;
		rdfs:range      skos:Concept .
            
skos:narrower
		api:label "narrower" ; 
		api:multiValued true ;
		rdfs:domain     skos:Concept ;
		rdfs:range      skos:Concept .
            
skos:narrowerTransitive
		api:label "narrowerTransitive" ; 
		api:multiValued true ;
		rdfs:domain     skos:Concept ;
		rdfs:range      skos:Concept .
            


